check-in #1:
- set up file structure (DONE)
- create-next-app (DONE)
- install materialUI (use the signin materialUI template & dashboard template) - David, Eduardo (DONE)
- login/signup page - David, Eduardo, Athul (DONE)
- homepage + navbar (put in components folder) - David, Eduardo
- firebase setup - Ahad, Graydon, Mush (DONE)
- node.js/express setup, add an endpoint for food - Athul, Parbir
- set up CI/CD - Ahad, Graydon, Parbir
===
Parbir - Deploy/Hosting
Mush, Ahad, Athul - Firebase Auth
David, Eduardo - Frontend setup
Athul - Frontend routing

check-in #2:
- Login/Signup Page - Athul, David, Eduardo
- Firebase Auth + Login/Signup Backend - Ahad, Graydon
- Homepage Frontend + Recipes Posts - Mush
- Recipe Posts Backend - Mush
- Meal of the Week Frontend - Parbir
===
- Upvotes 
- Meal of the Week Backend
- Tags
- Comments

check-in #3 (GET DONE BY THEN):
Connect auth to frontend - Mush
Set up auth protected routes - Mush
Set up auth invalid inputs (and dupicate user handling) - Mush
Set up dashboard-v2 (when logged in/logged out) - Mush
Create individual recipe post screen frontend + connect (with comments, recipe flair tag, upvote/downvote, etc) - Graydon, Eduardo, David
User "my recipes" recipes screen (rectangles) - Athul - DONE
Recipe create/deletion/edit form screen - Athul
Create posts in backend - Mush (baseline endpoint) - DONE
    + Get all posts from backend - Mush - DONE
    + my recipes in backend - Athul - DONE
    + Delete/edit posts in backend - Athul - DONE
    + Update upvote counter posts in backend - Ahad - DONE
    + Get all comments for specific post (based on post ID) - Ahad - DONE (in GET /post/:id)
    + Add comments to posts in backend - Ahad - DONE
    + Handle meal of the week based on upvotes in backend - Parbir
    + Get all posts based on recipe flair tag - Parbir
Manage all users screen? (admin) (firestore)
Manage all posts screen? (admin) (firestore)
Edit user profile screen? (if we have time)



=== Brain dump
click on a post
redirect to post page (localhost3000/posts/postid)
GET /post/:id
GET /comments/:postId
- comments.where(postId === params.postId)


John Doe: Great Post

Replying to John Doe's message: "Great P...":
Jane Doe: I agree.