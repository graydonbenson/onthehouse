check-in #1:
- set up file structure (DONE)
- create-next-app (DONE)
- install materialUI (use the signin materialUI template & dashboard template) - David, Eduardo (DONE)
- login/signup page - David, Eduardo, Athul (DONE)
- homepage + navbar (put in components folder) - David, Eduardo
- firebase setup - Ahad, Graydon, Mush (DONE)
- node.js/express setup, add an endpoint for food - Athul, Parbir
- set up CI/CD - Ahad, Graydon, Parbir
===
Parbir - Deploy/Hosting
Mush, Ahad, Athul - Firebase Auth
David, Eduardo - Frontend setup
Athul - Frontend routing

check-in #2:
- Login/Signup Page - Athul, David, Eduardo
- Firebase Auth + Login/Signup Backend - Ahad, Graydon
- Homepage Frontend + Recipes Posts - Mush
- Recipe Posts Backend - Mush
- Meal of the Week Frontend - Parbir
===
- Upvotes 
- Meal of the Week Backend
- Tags
- Comments

check-in #3:
Connect auth to frontend - Mush - DONE
Set up auth protected routes - Mush - DONE
Set up auth invalid inputs (and dupicate user handling) - Mush
Set up dashboard-v2 (when logged in/logged out) - Mush
Create individual recipe post screen frontend + connect (with comments, recipe flair tag, upvote/downvote, etc) - Graydon, Eduardo, David
User "my recipes" recipes screen (rectangles) - Athul - DONE
Recipe create/deletion/edit form screen - Athul
Create posts in backend - Mush (baseline endpoint) - DONE
    + Get all posts from backend - Mush - DONE
    + my recipes in backend - Athul - DONE
    + Delete/edit posts in backend - Athul - DONE
    + Get upvote counter posts in backend - Ahad - DONE
    + Update upvote counter posts in backend - Ahad - DONE
    + Get all comments for specific post (based on post ID) - Ahad - DONE (in GET /post/:id)
    + Add comments to posts in backend - Ahad - DONE
    + Handle meal of the week based on upvotes in backend - Parbir
    + Get all posts based on recipe flair tag - Parbir
Manage all users screen? (admin) (firestore)
Manage all posts screen? (admin) (firestore)
Edit user profile screen? (if we have time)


=====
TBC by SUBMISSION DATE:
Schedule:
Sunday 6PM Meeting - Finish All Code/Report from Above
Tuesday Midnight - Drop your video segment on discord
Wednesday Midnight - Graydon edits and merges all segments


From Checkin 3:
- Handle meal of the week based on upvotes in backend + connect - Parbir
- Get all posts based on recipe flair tag + connect w/ a filter/search - Parbir
- Fix/finalize Get all & post comment - Ahad (1)
- Upvote/Downvote - Ahad (2)

- Fix/finalize auth - Mush
- Fix/finalize deployment - Mush

Frontend:
- All Pages - Change font (from default to Lato?) and use consistent fonting throughout (globally, project-wide) - Mush
- All Pages - Change theme to be consistent b/w all pages - Mush

- Login/Signup Page - add image and description - Athul
- Dashboard - Add shadow/effect to card + change background to light grey for ex. like MUI card exemplar - Mush
- RecipeCard - Make it "pretty", add flair tag - Mush
- Recipe Card/Post Page - Gallery of images - Athul (if we have time)
- Post Page - Revamp entire page/make it "pretty"/responsive - Parbir

- Create Recipe - Include option to upload image as file (w/ url option still there) - Athul
- Create Recipe - Change flair from text field to drop down - Ahad (3)

- Comments - include reply option - Ahad
- Notifications - notification when upvote/downvote or comment - Ahad
- Post Page - Use delimeter on Ingredients and Directions - Ahad

Backend:
- Create/Edit Recipe - Include option to upload image as file (w/ url option still there) - Athul
- Comments - include reply option - Ahad
- Notifications - notification when upvote/downvote or comment - Ahad
- Post Page - Use delimeter on Ingredients and Directions - Ahad


Misc.
- Final Report - Graydon, Eduardo, David
- Postman tests/documentation - Mush 
- Plan Demo Video (who says what)- All - DONE
- Demo Video - All
- Deploy Final Time/Final Testing - Mush


Demo Video (write ur script in doc on dc, keep it to 1 minute):
- Objective/Motivation - Athul
- Requirements - David, Eduardo, Graydon
- Architecture - Ahad
- Design Artifacts (arch/seq/class diagrams) - Parbir
- Test Cases - Mush
- Retrospective/Next Steps/Q&A - Mush






=== Brain dump
click on a post
redirect to post page (localhost3000/posts/postid)
GET /post/:id
GET /comments/:postId
- comments.where(postId === params.postId)


John Doe: Great Post

Replying to John Doe's message: "Great P...":
Jane Doe: I agree.