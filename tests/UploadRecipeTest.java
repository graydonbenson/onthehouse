// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class UploadRecipeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testAuthorizedUploadRecipe() {
    // Test name: TestAuthorizedUploadRecipe
    // Step # | name | target | value
    // 1 | open | /dashboard | 
    driver.get("https://seng-401-on-the-house.web.app/dashboard");
    // 2 | waitForElementPresent | css=.MuiButton-root | 30000
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".MuiButton-root")));
    }
    // 3 | assertText | xpath=(//button[@type='button'])[2] | LOGOUT
    assertThat(driver.findElement(By.xpath("(//button[@type=\'button\'])[2]")).getText(), is("LOGOUT"));
    // 4 | mouseOver | css=a:nth-child(2) .MuiSvgIcon-root | 
    {
      WebElement element = driver.findElement(By.cssSelector("a:nth-child(2) .MuiSvgIcon-root"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 5 | click | css=a:nth-child(2) .MuiSvgIcon-root | 
    driver.findElement(By.cssSelector("a:nth-child(2) .MuiSvgIcon-root")).click();
    // 6 | click | id=:rc: | 
    driver.findElement(By.id(":rc:")).click();
    // 7 | type | id=:rc: | Test Post
    driver.findElement(By.id(":rc:")).sendKeys("Test Post");
    // 8 | click | id=:rd: | 
    driver.findElement(By.id(":rd:")).click();
    // 9 | type | id=:rd: | Test Ingredients
    driver.findElement(By.id(":rd:")).sendKeys("Test Ingredients");
    // 10 | click | css=.MuiFormControl-root:nth-child(3) > .MuiInputBase-root | 
    driver.findElement(By.cssSelector(".MuiFormControl-root:nth-child(3) > .MuiInputBase-root")).click();
    // 11 | type | id=:re: | Test Directions
    driver.findElement(By.id(":re:")).sendKeys("Test Directions");
    // 12 | click | css=body | 
    driver.findElement(By.cssSelector("body")).click();
    // 13 | click | id=demo-simple-select | 
    driver.findElement(By.id("demo-simple-select")).click();
    // 14 | click | css=.MuiMenuItem-root:nth-child(1) | 
    driver.findElement(By.cssSelector(".MuiMenuItem-root:nth-child(1)")).click();
    // 15 | click | id=:rf: | 
    driver.findElement(By.id(":rf:")).click();
    // 16 | type | id=:rf: | https://images.ricardocuisine.com/services/recipes/496x670_4874.jpg
    driver.findElement(By.id(":rf:")).sendKeys("https://images.ricardocuisine.com/services/recipes/496x670_4874.jpg");
    // 17 | click | css=.MuiButton-containedInfo | 
    driver.findElement(By.cssSelector(".MuiButton-containedInfo")).click();
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) | 30000
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".MuiGrid-root:nth-child(1)")));
    }
    // 19 | assertText | css=.MuiGrid-root:nth-child(1) .MuiCardHeader-root .MuiTypography-root:nth-child(1) | Test Post
    assertThat(driver.findElement(By.cssSelector(".MuiGrid-root:nth-child(1) .MuiCardHeader-root .MuiTypography-root:nth-child(1)")).getText(), is("Test Post"));
  }
  @Test
  public void testUnauthorizedUploadRecipe() {
    // Test name: TestUnauthorizedUploadRecipe
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://seng-401-on-the-house.web.app/");
    // 2 | click | css=.MuiButton-containedWarning | 
    driver.findElement(By.cssSelector(".MuiButton-containedWarning")).click();
    // 3 | mouseOver | css=a:nth-child(2) .MuiSvgIcon-root | 
    {
      WebElement element = driver.findElement(By.cssSelector("a:nth-child(2) .MuiSvgIcon-root"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 4 | click | css=a:nth-child(2) .MuiSvgIcon-root | 
    driver.findElement(By.cssSelector("a:nth-child(2) .MuiSvgIcon-root")).click();
    // 5 | assertText | css=.MuiTypography-h5 | Sign in
    assertThat(driver.findElement(By.cssSelector(".MuiTypography-h5")).getText(), is("Sign in"));
  }
}
